[
    {"name": "My Hero Academia API.", "legend":"MY HERO ACADEMIA API", "buttons":[{"title":"Project repository.", "link":"https://github.com/pattisoj/my-hero-academia-api"}, {"title":"View the live site.", "link":"https://myheroacademia-api.onrender.com/"}, {"title":"JavaScript. Node.js. Express.js. Heroku. Jest."}], "title": "A fan-made API for the anime series My Hero Academia. Currently version 1.2.0.", "hook":"This is an open source project that anyone can contribute to.", "content":[{"content":"I really enjoy anime and one of my recent favorites has been My Hero Academia, I decided I wanted to create something for it and for it's fan base so I decided to create this API.", "subcontent":"Currently there is data for 160 Characters (57 students, 46 villains, 42 heroes and 15 civilians)."},{"title":"Endpoints", "content":"Characters", "subcontent":"Routes include /characters as a standalone route. This route has sub-routes as follows: /students, /villains, /heroes, /other."}, {"title":"Example use case", "content":"curl https://myheroacademia-api.onrender.com/characters"}, {"content":"This project is still being worked on. I would highly recommend checking out the project repository for the most up to date information!"}]},

    {"name": "Travel Application.", "legend":"FINDERS KEEPERS TRAVEL APPLICATION", "buttons":[{"title":"Project repository.", "link":"https://github.com/pattisoj/final-project-travel-app-team-jenga"}, {"title":"Live site.", "link":"https://finders-keepers-soc.netlify.app/"}, {"title":" HTML. CSS. JavaScript. AWS. Jest. Cypress. Auth0."}], "title": "A Travel app for any user. Designed to help find destination information.", "hook": "Created as a team of 5 in 4 weeks. (Week 13 - 16 of the School of Code bootcamp.)", "content":[{"title":"The Brief", "content":"The brief for this project was brief (no pun intended!). We had to simply identify and solve a problem using technology."}, {"title":"The Problems & Our Solution", "content":"So what problems did we find? The problem this app aimed to solve can be split into two sections:"}, {"title":"Too much information", "content":"During our consumer research, before app creation, we found that consumers were overwhelmed by all of the information out there when they were trying to book a holiday. They had way too many tabs open and felt they had to hold a lot of information between webpages to inform their decision We set out to solve this by creating an app that could store all the information you would need in one place. This is the first purpose of FINDERS KEEPERS."}, {"title":"Profit influenced information", "content":"Whilst doing our research to source the best information for our new application we discovered a second problem; profit influenced the information websites provided. We found that websites seemed to avoid tougher topics like crime or possible negatives to travel in order to sell you their travel guides for example."}, {"content":"This gave us a unique opportunity. We didn't need to make profit. We decided to take this as a bonus and focus on showing the truthful information - unedited and unbiased. To achieve this we didn't cherry pick our information and decided to display it to users as is. Giving our users full confidence in our information.", "subcontent":"I highly recommend checking out the project repository to find out more about the project and the people I had the pleasure of working alongside!"}]},

    {"name": "Revision Application.", "legend":"SOC REVISION APPLICATION", "buttons":[{"title":"Project repository.", "link":"https://github.com/pattisoj/soc-revision-app"}, {"title":"Live site.", "link":"https://team16.netlify.app/"}, {"title":"HTML. CSS. JavaScript. SQL. Jest. Cypress."}], "title": "A Revision app for the School of Code. Created as a team of 4 in one week (5 days).", "hook": "This project was completed for week 9 of our 16 week bootcamp. I personally only had 8 weeks of coding experience going into this project!", "content":[{"title":"The Brief", "content":"We had to use what we had learnt on the course up until that point to try and improve the lives of our fellow bootcampers. We had to consider our user's experiences and their problems. Specifically, we wanted to enhance the remote experience of a bootcamper, or find something that could help them with the vast amount of learning they're undertaking."}, {"title":"The Problems & Our Solution", "content":"After sending out a survey to our fellow bootcampers we found what they wanted most was more time. As we couldn't code more hours into the day we decided to try and facilitate the best use of their time outside of bootcamp hours by creating a revision app."}]},

    {"name": "Scientific Computing Certification", "legend":"SCIENTIFIC COMPUTING CERTIFICATION", "buttons":[{"title":"Project 1.", "link":"https://github.com/pattisoj/arithmetic-formatter"}, {"title":"Project 2.", "link":"https://github.com/pattisoj/time-calculator"}, {"title":"Project 3.", "link":"https://github.com/pattisoj/budget-app"}, {"title":"Project 4.", "link":"https://github.com/pattisoj/polygon-area-calculator"}, {"title":"Project 5.", "link":"https://github.com/pattisoj/probability-calculator"}, {"title":"Python."}], "title": "The following 5 Projects were created to achieve the Scientific Computing with Python certification from freeCodeCamp.","hook":"This was my first certification following the School of Code", "content":[{"title":"Arithmetic Formatter"}, {"mark":"The Brief", "content":"Create a function that receives a list of strings that are arithmetic problems and returns the problems arranged vertically and side-by-side. The function should optionally take a second argument. When the second argument is set to True, the answers should be displayed."}, {"title":"Time Calculator"}, {"mark":"The Brief", "content":"Write a function named 'add_time' that takes in two required parameters and one optional parameter:", "subcontent":"A start time in the 12-hour clock format (ending in AM or PM), a duration time that indicates the number of hours and minutes and (optional) a starting day of the week, case insensitive."}, {"content":"The function should add the duration time to the start time and return the result. If the result will be the next day, it should show (next day) after the time. If the result will be more than one day later, it should show (n days later) after the time, where n is the number of days later. If the function is given the optional starting day of the week parameter, then the output should display the day of the week of the result. The day of the week in the output should appear after the time and before the number of days later."}, {"title":"Budget App"}, {"mark":"The Brief", "content":"Create a class that contained the following methods: deposit, withdraw, get_balance, transfer and check_funds. When the budget object is printed it should display: A title line of 30 characters where the name of the category is centred in a line of * characters. A list of the items in the ledger. Each line should show the description and amount. The first 23 characters of the description should be displayed, then the amount. The amount should be right aligned, contain two decimal places, and display a maximum of 7 characters. A line displaying the category total.", "subcontent":"Besides the Category class, create a function (outside of the class) called create_spend_chart that takes a list of categories as an argument. It should return a string that is a bar chart. The chart should show the percentage spent in each category passed in to the function."}, {"title":"Polygon Area Calculator"}, {"mark":"The Brief", "content":"In this project you will use object oriented programming to create a Rectangle class and a Square class. The Square class should be a subclass of Rectangle and inherit methods and attributes.", "subcontent":"When a Rectangle object is created, it should be initialized with width and height attributes. The class should also contain various additional methods (such as get_amount_inside).When a Square object is created a single side length is passed in. The __init__ method should store the side length in both the width and height attributes from the Rectangle class. The Square class should be able to access the Rectangle class methods but should also contain a set_side method."}, {"title":"Probability Calculator"}, {"mark":"The Brief", "content":"Suppose there is a hat containing 5 blue balls, 4 red balls, and 2 green balls. What is the probability that a random draw of 4 balls will contain at least 1 red ball and 2 green balls? While it would be possible to calculate the probability using advanced mathematics, an easier way is to write a program to perform a large number of experiments to estimate an approximate probability. For this project, you will write a program to determine the approximate probability of drawing certain balls randomly from a hat."}]},

    {"name": "NPM Package.", "legend":"JPSTRING", "buttons":[{"title":"Project repository.", "link":"https://github.com/pattisoj/jpString"}, {"title":" View on npm.", "link":"https://www.npmjs.com/package/jp-string"}, {"title":"JavaScript. Jest."}], "title": "An NPM string manipulation package.", "hook":"This is an open source project that anyone can contribute to. This library is fully tested with 100% coverage.", "content":[{"title": "I created this NPM package as a learning opportunity.", "content":"I wanted to experience and learn about the creation of a public package. I also wanted to learn about CI/CD pipelines and this project was my first experience of it. I was able to create a GitHub workflow that runs all tests on a push or pull request and if they pass is able to automatically publish to npm if the version is updated! This facilitated the addition of a CI/CD pipeline to my final project where I additionally experimented with running ESLint on a pull request!", "subcontent":"I chose a string manipulation package as I felt it gave me the most opportunities to keep adding functionality. I wrote all of the methods and tests in the library and all of the documentation."}]},

    {"name": "...", "legend": "COMING SOON", "title":"This space is empty, for now...", "hook":"I am looking forward to sharing what I have been working on.", "content":[{"content":"For a sneak peak of my public work right now be sure to head over to my GitHub."}]}
]





